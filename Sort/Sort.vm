function Sort.new 0
push constant 1
call Memory.alloc 1
pop pointer 0
push constant 10
call Array.new 1
pop this 0
push constant 0
push this 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push this 0
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push this 0
add
push argument 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push this 0
add
push argument 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push this 0
add
push argument 5
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push this 0
add
push argument 6
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push this 0
add
push argument 7
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 8
push this 0
add
push argument 8
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 9
push this 0
add
push argument 9
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
return
function Sort.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Sort.disp 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push constant 10
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
pop pointer 1
push that 0
call Output.printInt 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.asc 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 10
lt
not
if-goto WHILE_END1
push local 1
push this 0
add
pop pointer 1
push that 0
push local 2
push this 0
add
pop pointer 1
push that 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 1
push this 0
add
push local 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Sort.desc 3
push argument 0
pop pointer 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push constant 10
lt
not
if-goto WHILE_END0
push constant 0
pop local 2
label WHILE_EXP1
push local 2
push constant 10
lt
not
if-goto WHILE_END1
push local 1
push this 0
add
pop pointer 1
push that 0
push local 2
push this 0
add
pop pointer 1
push that 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push this 0
add
pop pointer 1
push that 0
pop local 0
push local 1
push this 0
add
push local 2
push this 0
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push local 2
push constant 1
add
pop local 2
goto WHILE_EXP1
label WHILE_END1
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
